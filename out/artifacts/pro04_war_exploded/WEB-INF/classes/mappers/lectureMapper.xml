<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.ed.haebeop.persistence.LectureMapper">
    <!-- 강의 리스트 -->
    <select id="lectureList" resultType="kr.ed.haebeop.domain.LectureVO">
        SELECT  lcode ,lname, sname, tname, lcontent, lprice, maxStudent, sdate, edate, l.saveFile as saveFile, l.scode as scode
        FROM subject s JOIN lecture l ON (s.scode=l.scode) JOIN teacher t ON (t.tcode=l.tcode)
        <where>
            <if test="type != null">
                <trim prefixOverrides="OR">
                    <choose>
                        <when test="type == 'T'.toString()">
                            lname LIKE concat('%', #{keyword}, '%')
                        </when>
                        <when test="type == 'C'.toString()">
                            lcontent LIKE concat('%', #{keyword}, '%')
                        </when>
                        <when test="type == 'W'.toString()">
                            tname LIKE concat('%', #{keyword}, '%')
                        </when>
                    </choose>
                </trim>
            </if>
            <if test="scode != null">
                AND l.scode = #{scode}
            </if>
        </where>
        order by sdate limit #{postStart}, #{postCount}
    </select>

    <!-- 마감임박 강의 -->
    <select id="lastList" resultType="kr.ed.haebeop.domain.LectureVO">
        SELECT  lcode ,lname, sname, tname, lcontent, lprice, maxStudent, sdate, edate, l.saveFile as saveFile, l.scode as scode
        FROM subject s JOIN lecture l ON (s.scode=l.scode) JOIN teacher t ON (t.tcode=l.tcode)
        <where>
            <if test="type != null">
                <trim prefixOverrides="OR">
                    <choose>
                        <when test="type == 'T'.toString()">
                            lname LIKE concat('%', #{keyword}, '%')
                        </when>
                        <when test="type == 'C'.toString()">
                            lcontent LIKE concat('%', #{keyword}, '%')
                        </when>
                        <when test="type == 'W'.toString()">
                            tname LIKE concat('%', #{keyword}, '%')
                        </when>
                    </choose>
                </trim>
            </if>
            <if test="scode != null">
                AND l.scode = #{scode}
            </if>
            AND edate > current_date
        </where>
        order by edate ASC
        LIMIT 5;
    </select>

    <!-- 오픈예정 강의 -->

    <select id="newList" resultType="kr.ed.haebeop.domain.LectureVO">
        SELECT  lcode ,lname, sname, tname, lcontent, lprice, maxStudent, sdate, edate, l.saveFile as saveFile, l.scode as scode
        FROM subject s JOIN lecture l ON (s.scode=l.scode) JOIN teacher t ON (t.tcode=l.tcode)
        <where>
            <if test="type != null">
                <trim prefixOverrides="OR">
                    <choose>
                        <when test="type == 'T'.toString()">
                            lname LIKE concat('%', #{keyword}, '%')
                        </when>
                        <when test="type == 'C'.toString()">
                            lcontent LIKE concat('%', #{keyword}, '%')
                        </when>
                        <when test="type == 'W'.toString()">
                            tname LIKE concat('%', #{keyword}, '%')
                        </when>
                    </choose>
                </trim>
            </if>
            <if test="scode != null">
                AND l.scode = #{scode}
            </if>
            AND sdate > current_date
        </where>
        order by sdate  ASC
        LIMIT 5;
    </select>

    <!-- lecture의 전체 개수 구하기 -->
    <select id="getCount" resultType="integer">
        select count(*) FROM subject s JOIN lecture l ON (s.scode=l.scode) JOIN teacher t ON (t.tcode=l.tcode)
        <where>
            <if test="type != null">
                <trim prefixOverrides="OR">
                    <choose>
                        <when test="type == 'T'.toString()">
                            lname LIKE concat('%', #{keyword}, '%')
                        </when>
                        <when test="type == 'C'.toString()">
                            lcontent LIKE concat('%', #{keyword}, '%')
                        </when>
                        <when test="type == 'W'.toString()">
                            tname LIKE concat('%', #{keyword}, '%')
                        </when>
                    </choose>
                </trim>
            </if>
            <if test="scode != null">
                AND l.scode = #{scode}
            </if>
        </where>
    </select>

    <!-- 상세보기 -->
    <select id="lectureDetail" resultType="kr.ed.haebeop.domain.LectureVO">
        SELECT lcode, lname, l.scode as scode, sname, l.tcode as tcode, tname, lcontent, lprice, maxStudent, sdate, edate, l.saveFile as saveFile
        FROM subject s JOIN lecture l ON (s.scode=l.scode) JOIN teacher t ON (t.tcode=l.tcode)
        WHERE lcode = #{lcode}
    </select>

    <select id="lectureCount" resultType="integer">
        select count(*) from lecture
    </select>

    <update id="lectureEdit">
        update lecture set lcode=CONCAT(#{scode},substring(lcode, 3, LENGTH(lcode))), lname=#{lname}, scode=#{scode}, tcode=#{tcode}, lcontent=#{lcontent}, lprice=#{lprice}, maxStudent=#{maxStudent}, sdate=#{sdate}, edate=#{edate}, saveFile=#{saveFile}
        where lcode=#{lcode}
    </update>

    <!--    강의코드, 강의명, 과목코드, 강사코드, 강의 소개, 강의 단가, 수강인원, 강의 썸네일(saveFolder, originFile, saveFile), 강의 시작일, 강의 종료일,-->
    <!--    (오프라인 시)강의 시작시간, 온오프 여부, 강의실-->
    <insert id="lectureInsert">
        insert into lecture (lcode, lname, scode,tcode, lcontent, lprice, maxStudent, saveFile, sdate,edate)
        values(#{lcode}, #{lname}, #{scode}, #{tcode}, #{lcontent}, #{lprice}, #{maxStudent}, #{saveFile}, #{sdate}, #{edate})
    </insert>


    <select id="subjects" resultType="kr.ed.haebeop.domain.Subject">
        select * from subject order by sname
    </select>

    <select id="comparePeriod" resultType="boolean">
        <![CDATA[
        SELECT (edate < CURRENT_DATE) FROM lecture WHERE lcode=#{lcode}
        ]]>
    </select>

    <select id="popularLectureList" resultType="kr.ed.haebeop.domain.LectureVO">
        SELECT l.lcode AS lcode, lname, tname, l.saveFile AS saveFile
        FROM lecture l JOIN register r ON (l.lcode=r.lcode) JOIN teacher t ON (l.tcode=t.tcode) GROUP BY l.lcode
        ORDER BY COUNT(*) DESC LIMIT 5
    </select>


</mapper>